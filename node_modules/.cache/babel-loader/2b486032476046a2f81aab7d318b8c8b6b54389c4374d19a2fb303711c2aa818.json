{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nconst specialsSlice = createSlice({\n  name: 'specials',\n  initialState: [],\n  reducers: {\n    setSpecials(state, action) {\n      return action.payload;\n    },\n    addSpecial: (state, action) => {\n      return [...state, action.payload];\n    },\n    updateSpecial(state, action) {\n      const updatedSpecials = state.map(special => {\n        if (special.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return special;\n        }\n      });\n      return updatedSpecials;\n    },\n    removeSpecial(state, action) {\n      console.log(current(state), action.payload);\n      return state.filter(special => special.id !== action.payload.id);\n    }\n  }\n});\nexport const {\n  setSpecials,\n  addSpecial,\n  updateSpecial,\n  removeSpecial\n} = specialsSlice.actions;\nexport default specialsSlice.reducer;\n\n// OLD METHOD\n\n// // Action Creators\n\n// export const createSpecials = (specials) => {\n//     return {\n//         type: \"specials/create\",\n//         payload: specials,\n//     }\n// }\n\n// export const addSpecial = (special) => {\n//     return {\n//         type: \"special/add\",\n//         payload: special,\n//     };\n// }\n\n// export const removeSpecial = (id) => {\n//     return {\n//         type: \"special/remove\",\n//         payload: id,\n//     }\n// }\n\n// // Reducers\n// const initialState = [];\n\n// export default function specialsReducer(state = initialState, action) {\n//     switch (action.type) {\n//         case \"specials/create\":\n//             return action.payload\n\n//         case \"special/add\":\n//             return [...state, action.payload];\n\n//         case \"special/remove\":\n//             return state.filter((special) => special.id !== action.payload)\n\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"names":["createSlice","current","specialsSlice","name","initialState","reducers","setSpecials","state","action","payload","addSpecial","updateSpecial","updatedSpecials","map","special","id","removeSpecial","console","log","filter","actions","reducer"],"sources":["/home/ocole/code/phase-5/denver-hh-depot/client/src/features/specialsSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\n\nconst specialsSlice = createSlice({\n    name: 'specials',\n    initialState: [],\n    reducers: {\n        setSpecials(state, action) {\n            return action.payload\n        },\n\n        addSpecial: (state, action) => {\n            return [...state, action.payload]\n        },\n\n        updateSpecial(state, action) {\n            const updatedSpecials = state.map((special) => {\n                if (special.id === action.payload.id) {\n                  return action.payload }\n                else {\n                  return special }\n            })\n            return updatedSpecials\n        },\n\n        removeSpecial (state, action) {\n            console.log(current(state), action.payload)\n            return state.filter((special) => special.id !== action.payload.id)\n        }\n    }\n})\n\nexport const { setSpecials, addSpecial, updateSpecial, removeSpecial } = specialsSlice.actions;\nexport default specialsSlice.reducer;\n\n\n// OLD METHOD\n\n// // Action Creators\n\n\n// export const createSpecials = (specials) => {\n//     return {\n//         type: \"specials/create\",\n//         payload: specials,\n//     }\n// }\n\n// export const addSpecial = (special) => {\n//     return {\n//         type: \"special/add\",\n//         payload: special,\n//     };\n// }\n\n// export const removeSpecial = (id) => {\n//     return {\n//         type: \"special/remove\",\n//         payload: id,\n//     }\n// }\n\n// // Reducers\n// const initialState = [];\n\n// export default function specialsReducer(state = initialState, action) {\n//     switch (action.type) {\n//         case \"specials/create\":\n//             return action.payload\n        \n//         case \"special/add\":\n//             return [...state, action.payload];\n\n//         case \"special/remove\":\n//             return state.filter((special) => special.id !== action.payload)\n\n//         default:\n//             return state;\n//     }\n// }"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAEvD,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAC9BG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,OAAOA,MAAM,CAACC,OAAO;IACzB,CAAC;IAEDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3B,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACrC,CAAC;IAEDE,aAAaA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMI,eAAe,GAAGL,KAAK,CAACM,GAAG,CAAEC,OAAO,IAAK;QAC3C,IAAIA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,EAAE;UACpC,OAAOP,MAAM,CAACC,OAAO;QAAC,CAAC,MACpB;UACH,OAAOK,OAAO;QAAC;MACrB,CAAC,CAAC;MACF,OAAOF,eAAe;IAC1B,CAAC;IAEDI,aAAaA,CAAET,KAAK,EAAEC,MAAM,EAAE;MAC1BS,OAAO,CAACC,GAAG,CAACjB,OAAO,CAACM,KAAK,CAAC,EAAEC,MAAM,CAACC,OAAO,CAAC;MAC3C,OAAOF,KAAK,CAACY,MAAM,CAAEL,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,CAAC;IACtE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,WAAW;EAAEI,UAAU;EAAEC,aAAa;EAAEK;AAAc,CAAC,GAAGd,aAAa,CAACkB,OAAO;AAC9F,eAAelB,aAAa,CAACmB,OAAO;;AAGpC;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}